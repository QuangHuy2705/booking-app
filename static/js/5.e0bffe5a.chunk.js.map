{"version":3,"sources":["components/menu/menu.module.scss","components/menu/menu.container.js","components/menu/menu.actions.js"],"names":["module","exports","menu","menu-nav","back-button","page-numbers","number","number--active","menu-categories","category","food-image","category-image","category-image--Appetizers","category-image--MainDish","category-image--FriedRice","category-image--Rolls","category-image--Extra","category-image--Drinks","category-image--NoodlesandPho","category-image--SideDish","food-price","order-button","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","dishesPerPage","event","setState","Number","target","id","menuType","getDishes","alert","_this2","_this$props","items","loading","_this$state","indexOfLastDish","indexOfFirstDish","renderDishes","slice","map","dish","idx","name","react_default","a","createElement","key","className","styles","alt","src","img","price","onClick","onOrder","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","concat","e","handleClick","components","item","onGetDishes","split","join","toUpperCase","Fragment","style","fontWeight","Component","mapDispatchToProps","type","payload","connect"],"mappings":"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","file":"static/js/5.e0bffe5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__dRmno\",\"menu-nav\":\"menu_menu-nav__HvUah\",\"back-button\":\"menu_back-button__3_ZG8\",\"page-numbers\":\"menu_page-numbers__Jirnh\",\"number\":\"menu_number__xyg_v\",\"number--active\":\"menu_number--active__3ckeS\",\"menu-categories\":\"menu_menu-categories__2lLfJ\",\"category\":\"menu_category__2f8VF\",\"food-image\":\"menu_food-image__15sme\",\"category-image\":\"menu_category-image__zpnVb\",\"category-image--Appetizers\":\"menu_category-image--Appetizers__3ydCq\",\"category-image--MainDish\":\"menu_category-image--MainDish__T2LHi\",\"category-image--FriedRice\":\"menu_category-image--FriedRice__1P6xQ\",\"category-image--Rolls\":\"menu_category-image--Rolls__J7PEs\",\"category-image--Extra\":\"menu_category-image--Extra__4ZM47\",\"category-image--Drinks\":\"menu_category-image--Drinks__2n_nE\",\"category-image--NoodlesandPho\":\"menu_category-image--NoodlesandPho__bJorc\",\"category-image--SideDish\":\"menu_category-image--SideDish__bri1H\",\"food-price\":\"menu_food-price__JKFD7\",\"order-button\":\"menu_order-button__1FTJi\"};","import React, { Component } from 'react'\r\nimport { Navbar, Loading, Footer } from '../../commons/components/index'\r\nimport '../homepage/homepage.styles.css'\r\nimport * as styles from './menu.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getDishes } from './menu.actions'\r\n\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentPage: 1,\r\n            dishesPerPage: 8\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            currentPage: Number(event.target.id)\r\n        })\r\n    }\r\n\r\n    onGetDishes(menuType) {\r\n        this.props.getDishes(menuType)\r\n        this.setState({\r\n            currentPage: 1\r\n        })\r\n    }\r\n\r\n    onOrder() {\r\n        alert('This feature is coming soon, please hang with us for more fun eating!')\r\n    }\r\n\r\n    render() {\r\n        const { menuType, items, loading } = this.props\r\n        const { currentPage, dishesPerPage } = this.state\r\n\r\n        //Logic for displaying dishes \r\n        const indexOfLastDish = currentPage * dishesPerPage;\r\n        const indexOfFirstDish = indexOfLastDish - dishesPerPage;\r\n        const currentDishes = items.slice(indexOfFirstDish, indexOfLastDish)\r\n\r\n        const renderDishes = currentDishes.map((dish, idx) => {\r\n            const { name } = dish\r\n            return (\r\n                <div key={idx} className={styles[`category`]}>\r\n                    <img alt='food' src={dish.img} className={styles[`food-image`]} />\r\n                    <h4 className={styles[`category-description`]}>\r\n                        {name}\r\n                    </h4>\r\n                    <p className={styles[`food-price`]}>{dish.price}</p>\r\n                    <button onClick={() => this.onOrder()} className={styles[`order-button`]}>Add to cart!</button>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(items.length / dishesPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <li\r\n                    className={this.state.currentPage === number ? `${styles[`number`]} ${styles[`number--active`]}` : styles[`number`]}\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={(e) => this.handleClick(e)}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className={styles.menu}>\r\n                    <h2>Pick your favorites from our delicious menu</h2>\r\n                    {loading && (<Loading />)}\r\n                    {menuType === 'menu' ? (\r\n                        <div className={styles[`menu-categories`]}>\r\n                            {items && items.map((item, idx) => {\r\n                                const { name } = item\r\n                                return (\r\n                                    <div key={idx} className={styles[`category`]}>\r\n                                        <a onClick={() => this.onGetDishes(name.split(' ').join('').toUpperCase())} className={`${styles[`category-image`]} ${styles[`category-image--${name.split(' ').join('')}`]}`} />\r\n                                        <h4 className={styles[`category-description`]}>\r\n                                            {item.name}\r\n                                        </h4>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    ) : (\r\n                            <React.Fragment>\r\n                                <div className={styles[`menu-nav`]}>\r\n                                    <a onClick={() => this.onGetDishes('MENU')} className={styles[`back-button`]}>Menu</a> | <span style={{ fontWeight: 'bold' }}>{menuType}</span>\r\n                                </div>\r\n\r\n                                <div className={styles[`menu-categories`]}>\r\n                                    {renderDishes}\r\n                                </div>\r\n                                <ul className={styles[`page-numbers`]}>\r\n                                    {renderPageNumbers}\r\n                                </ul>\r\n                            </React.Fragment>\r\n                        )}                    \r\n                </div>\r\n                <Footer />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state[0].loading,\r\n        menuType: state[0].menuType,\r\n        items: state[0].items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getDishes\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)","export const getDishes = (menuType) => ({ type: `GET_${menuType}`, payload: { menuType } })"],"sourceRoot":""}